
---------------------------------------------------------------------- QUICKLIST

---------------------------------------------------------------------- CREAR Y BORRAR LA BASE DE DATOS
	
	--    Drop database BaseDeDatosQuickList;
	--    create database BaseDeDatosQuickList;
	--    Use BaseDeDatosQuickList;
	

---------------------------------------------------------------------- DAR FORMATO DE FECHA

	select Date_format(now(),'%d/%m/%y');

---------------------------------------------------------------------- CREAR TABLAS



	Create table T_Plan_De_Estudios( 

		ID_Plan_De_Estudios int primary key, 
		Nombre_Programa Varchar(100), 
		Version_Plan_De_Estudios int, 
		Meses_Etapa_Lectiva int , 
		Nivel_De_Formacion Varchar(100)
	  
	) 

	Create table T_Competencias( 

		ID_Competencia int primary key, 
		ID_Plan_De_Estudios int,
		Competencia_A_Desarrollar text not null, 
		foreign key (ID_Plan_De_Estudios) references T_Plan_De_Estudios (ID_Plan_De_Estudios)
	  
	)
	 
	Create table T_Actividad_De_Aprendizaje( 

		ID_Actividad_De_Aprendizaje int primary key, 
		ID_Competencia int,
		Fase_Del_Proyecto text not null, 
		Actividad_De_Aprendizaje text not null, 
    		foreign key (ID_Competencia) references T_Competencias (ID_Competencia)
	  
	)
	 
	Create table T_Resultado_De_Aprendizaje( 

		ID_Resultado_De_Aprendizaje int primary key, 
		ID_Actividad_De_Aprendizaje int,
		Resultado_De_Aprendizaje text not null, 
    		foreign key (ID_Actividad_De_Aprendizaje) references T_Actividad_De_Aprendizaje (ID_Actividad_De_Aprendizaje)
	  
	)

	Create table T_Fichas(
		
		Numero_De_Ficha int primary key,
		ID_Plan_De_Estudios int,
		Fecha_Inicio datetime not null, 
		Fecha_Fin datetime not null,
    		foreign key (ID_Plan_De_Estudios) references T_Plan_De_Estudios (ID_Plan_De_Estudios)
		
	)

	Create table T_Informacion_Funcionarios( 

		Documento_De_Identidad bigint not null primary key, 
		Contraseña Varchar(30), 
		Nombre Varchar(30) not null, 
		Primer_Apellido Varchar(30) not null, 
		Segundo_Apellido Varchar(30), 
		cargo Varchar(100),
		Correo_Electronico Varchar(100) not null, 
		Telefono_Fijo int, 
		Telefono_Celular bigint not null

	)

	Create table T_Horario( 

		ID_Horario int primary key,
		ID_Resultado_De_Aprendizaje int,
		ID_Funcionario bigint,
		Dia_Semana Varchar(30),
		Hora_Inicio Varchar(30),
		Hora_Fin Varchar(30),
		Fecha_Inicio datetime not null,
		Fecha_Fin datetime not null,
		Lugar text,
    		foreign key (ID_Resultado_De_Aprendizaje) references T_Resultado_De_Aprendizaje (ID_Resultado_De_Aprendizaje),
    		foreign key (ID_Funcionario) references T_Informacion_Funcionarios (Documento_De_Identidad)
	  
	)

	Create table T_Informacion_Aprendices( 

		Documento_De_Identidad bigint not null primary key, 
		Contraseña Varchar(30), 
		Nombre Varchar(30) not null, 
		Primer_Apellido Varchar(30) not null, 
		Segundo_Apellido Varchar(30), 
		Fecha_De_Nacimiento datetime, 
		Correo_Electronico Varchar(100) not null, 
		Genero Varchar(13) default "Desconocido", 
		Telefono_Fijo int, 
		Telefono_Celular bigint not null, 
		estado Varchar(30),
		nombre_Proyecto text,
		Estilos_Y_Ritmos_De_Aprendizaje text,
	   	Estrategia_Metodológica_De_Preferencia text,
	    	Caracteristicas_Culturales_Y_Sociales text

	)

	Create table T_Actividades( 

		ID_Actividad int primary key, 
		ID_Horario int,
		ID_Aprendiz bigint,
		Titulo_Actividad Varchar(100) not null, 
		Descripcion_Actividad text not null, 
		Fecha_De_Entrega datetime, 
		Valor_Maximo_Actividad int , 
    		foreign key (ID_Horario) references T_Horario (ID_Horario), 
    		foreign key (ID_Aprendiz) references T_Informacion_Aprendices (Documento_De_Identidad)

	)

	Create table T_Calificaciones(
		
		ID_Calificacion int primary key,
		ID_Actividad int,
		Calificacion float,
		Observaciones text,
    		foreign key (ID_Actividad) references T_Actividades (ID_Actividad)
		
	)

	create table T_Formato_De_Etapa_Lectiva(
  
		ID_Formato int primary key,
		ID_Aprendiz bigint,
		Version_Formato Int, 
		Fecha_Actual datetime, 
		Codigo Varchar(30), 
		observaciones text,
    		foreign key (ID_Aprendiz) references T_Informacion_Aprendices (Documento_De_Identidad)

	)

	Create table T_Clase(
		
		ID_Clase int primary key,
		ID_Horario int,
		Fecha datetime not null, 
    		foreign key (ID_Horario) references T_Horario (ID_Horario)
		
	)

	Create table T_Inasistencia( 

		ID_Inasistencia int primary key, 
		ID_Aprendiz bigint, 
		Estado_De_Inasistencia Varchar(10) not null,
		Justificacion_De_Inasistencia text,
    		foreign key (ID_Aprendiz) references T_Informacion_Aprendices (Documento_De_Identidad)

	)

	
---------------------------------------------------------------------- ELIMINAR TABLAS
/*
		if object_id('Informacion_Aprendices') is not null
		  drop table Informacion_Aprendices;

		if object_id('Informacion_Instructores') is not null
		  drop table Informacion_Instructores;

		if object_id('Informacion_Administradores') is not null
		  drop table Informacion_Administradores;

		if object_id('Informacion_Actividades') is not null
		  drop table Informacion_Actividades;

		if object_id('Informacion_Asistencia') is not null
		  drop table Informacion_Asistencia;

		if object_id('Plan_De_Estudios') is not null
		  drop table Plan_De_Estudios;
*/

---------------------------------------------------------------------- INSERTAR REGISTROS "T_Plan_De_Estudios"

	insert into T_Plan_De_Estudios 
	 values (1,'ANALISIS Y DESARROLLO DE SISTEMAS DE INFORMACION',102,18,'TECNOLOGO');

---------------------------------------------------------------------- INSERTAR REGISTROS "T_Competencias"

	insert into T_Competencias
	 values (11,1,'ANALIZAR LOS REQUISITOS DEL CLIENTE PARA CONSTRUIR EL SISTEMA DE INFORMACION.');

---------------------------------------------------------------------- INSERTAR REGISTROS "T_Actividad_De_Aprendizaje"

	insert into T_Actividad_De_Aprendizaje
	 values (111,11,'ANALISIS','ELABORAR DIAGRAMAS DE TRANSICIÓN DE ESTADO.');

---------------------------------------------------------------------- INSERTAR REGISTROS "T_Resultado_De_Aprendizaje"

	insert into T_Resultado_De_Aprendizaje
	 values (1111,111,'CONSTRUIR EL MODELO CONCEPTUAL DEL MACROSISTEMA FRENTE A LOS REQUERIMIENTOS DEL CLIENTE, MEDIANTE EL USO E INTERPRETACIÓN DE LA INFORMACIÓN LEVANTADA, REPRESENTADO EN DIAGRAMAS DE CLASE, DE INTERACCIÓN, COLABORACIÓN Y CONTRATOS DE OPERACIÓN, DE ACUERDO CON LAS DIFERENTES SECUENCIAS, FASES Y PROCEDIMIENTOS DEL SISTEMA.');

---------------------------------------------------------------------- INSERTAR REGISTROS "T_Fichas"

	insert into T_Fichas
	 values (750566,1,'07/07/2014','07/07/2016');

---------------------------------------------------------------------- INSERTAR REGISTROS "T_Informacion_Funcionarios"

	insert into T_Informacion_Funcionarios
	 values (1022453456,'3EYRH48','ALFREDO','JIMENES','CAICEDO','INSTRUCTOR','AlfredJ3453@misena.edu.co',8596421,312456789585);

---------------------------------------------------------------------- INSERTAR REGISTROS "T_Horario"

	insert into T_Horario
	 values (11111,1111,1022453456,'MIERCOLES','12:00','18:00','01/10/2014','12/12/2014','Aula 308 CIDCA - Cr 38 Otro');

---------------------------------------------------------------------- INSERTAR REGISTROS "T_Informacion_Aprendices"

	insert into T_Informacion_Aprendices
	 values (7785885485,'5Y6Y56UR', 'PEDRO','CASAS','CUEVAS','08/03/1995','Pedrocuevas4545@gmail.com','M',6985732,3102558947,'EN FORMACION','CREACION DE UN APLICATIVO PARA LA GESTION DE LAS COMPRAS DE LA SERRAGERIA SERGIO´S','','','');

---------------------------------------------------------------------- INSERTAR REGISTROS "T_Actividades"

	insert into T_Actividades
	 values (111111,11111,7785885485,'INFORME DEL DIAGRAMA DE TRANSICION DE ESTADO','REALIZAR UN INFORME CON NORMAS APA DESCRIBIENDO Y REPRESENTANDO GREFICAMENTE CADA UNO DE LOS COMPONENTES DEL DIAGRAMA DE TRANSICION DE ESTADO.','15/11/2014','5' );

---------------------------------------------------------------------- INSERTAR REGISTROS "T_Calificaciones"

	insert into T_Calificaciones
	 values (1111111,111111,3.5,'No');

---------------------------------------------------------------------- INSERTAR REGISTROS "T_Formato_De_Etapa_Lectiva"

	

---------------------------------------------------------------------- INSERTAR REGISTROS "T_Clase"

	insert into T_Clase
	 values (11111111,11111,'13/11/2014');

---------------------------------------------------------------------- INSERTAR REGISTROS "T_Inasistencia"

	insert into T_Inasistencia
	 values (111111111,7785885485,'CE','Cita odontologia en el hospital pablo vi' );

---------------------------------------------------------------------- CONSULTAS CON JOIN

	--Gerarquia del plan de estudios

		select T_Fichas.Numero_De_Ficha,T_Plan_De_Estudios.Nombre_Programa,T_Competencias.Competencia_A_Desarrollar,T_Actividad_De_Aprendizaje.Actividad_De_Aprendizaje,T_Resultado_De_Aprendizaje.Resultado_De_Aprendizaje
		 from T_Plan_De_Estudios 
		 join T_Fichas on T_Plan_De_Estudios.ID_Plan_De_Estudios = T_Fichas.ID_Plan_De_Estudios
		 join T_Competencias on T_Plan_De_Estudios.ID_Plan_De_Estudios = T_Competencias.ID_Plan_De_Estudios
		 join T_Actividad_De_Aprendizaje on T_Competencias.ID_Competencia = T_Actividad_De_Aprendizaje.ID_Competencia
		 join T_Resultado_De_Aprendizaje on T_Actividad_De_Aprendizaje.ID_Actividad_De_Aprendizaje = T_Resultado_De_Aprendizaje.ID_Actividad_De_Aprendizaje

	--Obtener informacion basica del los instructores asignados a cada horario

		select T_Horario.Dia_Semana,T_Horario.Hora_Inicio,T_Horario.Hora_Fin,T_Informacion_Funcionarios.Nombre,T_Informacion_Funcionarios.Primer_Apellido,T_Informacion_Funcionarios.Correo_Electronico,T_Informacion_Funcionarios.Telefono_Fijo,T_Informacion_Funcionarios.Telefono_Celular
		 from T_Horario left outer 
		 join T_Informacion_Funcionarios on T_Horario.ID_Funcionario = T_Informacion_Funcionarios.Documento_De_Identidad

	--Obtener Actividades de un estudiante

		select T_Informacion_Aprendices.Documento_De_Identidad,T_Informacion_Aprendices.Nombre,T_Informacion_Aprendices.Primer_Apellido,T_Actividades.Titulo_Actividad,T_Actividades.Descripcion_Actividad,T_Actividades.Fecha_De_Entrega,T_Actividades.Valor_Maximo_Actividad
		 from T_Informacion_Aprendices 
		 join T_Actividades on T_Informacion_Aprendices.Documento_De_Identidad = T_Actividades.ID_Aprendiz

	--Obtener Calificaciones de las actividades de un estudiante

		select T_Informacion_Aprendices.Documento_De_Identidad,T_Informacion_Aprendices.Nombre,T_Informacion_Aprendices.Primer_Apellido,T_Actividades.Titulo_Actividad,T_Actividades.Valor_Maximo_Actividad,T_Calificaciones.Calificacion,T_Calificaciones.Observaciones
		 from T_Informacion_Aprendices 
		 join T_Actividades on T_Informacion_Aprendices.Documento_De_Identidad = T_Actividades.ID_Aprendiz
		 join T_Calificaciones on T_Actividades.ID_Actividad = T_Calificaciones.ID_Actividad
		 
	--Obtener las clases de cada horario

		select T_Clase.Fecha,T_Horario.Dia_Semana,T_Horario.Hora_Inicio,T_Horario.Hora_Fin
		 from T_Clase
		 join T_Horario on T_Clase.ID_Horario = T_Horario.ID_Horario

	--Obtener listado de estudiantes que tienen fallas con escusa

		select T_Informacion_Aprendices.Documento_De_Identidad,T_Informacion_Aprendices.Nombre,T_Informacion_Aprendices.Primer_Apellido,T_Inasistencia.Estado_De_Inasistencia,T_Inasistencia.Justificacion_De_Inasistencia
		 from T_Informacion_Aprendices 
		 join T_Inasistencia on T_Informacion_Aprendices.Documento_De_Identidad = T_Inasistencia.ID_Aprendiz


---------------------------------------------------------------------- INDICES

	create nonclustered index agruparPorNombre
	 on T_Informacion_Aprendices (Nombre);

	create nonclustered index agruparPorApellido
	 on T_Informacion_Aprendices (Nombre);

	create nonclustered index agruparPorFechaDeIngreso
	 on T_Fichas (Fecha_Inicio)

	create nonclustered index agruparPorCalificacion
	 on T_Calificaciones (calificacion);

    create nonclustered index agruparPorFechaDeEntrega
	 on T_Actividades (Fecha_De_Entrega);